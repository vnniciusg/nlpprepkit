"""This module provides a function to expand common English contractions in a given text."""

import re

CONTRACTIONS_MAP = {
    "a'ight": "alright",
    "ain't": "am not",
    "amn't": "am not",
    "n": "and",
    "arencha": "are not you",
    "aren't": "are not",
    "'bout": "about",
    "can't": "cannot",
    "cap'n": "captain",
    "'cause": "because",
    "cuz": "because",
    "'cept": "except",
    "c'mon": "come on",
    "could've": "could have",
    "couldn't": "could not",
    "couldn't've": "could not have",
    "cuppa": "cup of",
    "daren't": "dare not",
    "daresn't": "dare not",
    "dasn't": "dare not",
    "didn't": "did not",
    "doesn't": "does not",
    "don't": "do not",
    "dunno": "do not know",
    "d'ye": "do you",
    "d'ya": "do you",
    "e'en": "even",
    "e'er": "ever",
    "'em": "them",
    "everybody's": "everybody is",
    "everyone's": "everyone is",
    "everything's": "everything is",
    "finna": "fixing to",
    "fo'c'sle": "forecastle",
    "'gainst": "against",
    "g'day": "good day",
    "gimme": "give me",
    "giv'n": "given",
    "gi'z": "give us",
    "gonna": "going to",
    "gon't": "go not",
    "gotta": "got to",
    "hadn't": "had not",
    "had've": "had have",
    "hasn't": "has not",
    "haven't": "have not",
    "he'd": "he would",
    "he'd'nt've": "he did not have",
    "he'll": "he will",
    "helluva": "hell of a",
    "yesn't": "no",
    "he's": "he is",
    "here's": "here is",
    "how'd": "how did",
    "howdy": "how do you do",
    "how'll": "how will",
    "how're": "how are",
    "how's": "how is",
    "i'd": "i would",
    "i'd've": "i would have",
    "i'd'nt": "i would not",
    "i'd'nt've": "i would not have",
    "if'n": "if and when",
    "i'll": "i will",
    "i'm": "i am",
    "i'm'onna": "i am going to",
    "imma": "i am going to",
    "i'm'o": "i am going to",
    "i'm'na": "i am going to",
    "innit": "isn't it",
    "ion": "i do not",
    "i've": "i have",
    "isn't": "is not",
    "it'd": "it would",
    "it'll": "it will",
    "it's": "it is",
    "Idunno": "i do not know",
    "kinda": "kind of",
    "lemme": "let me",
    "let's": "let us",
    "loven't": "love not",
    "ma'am": "madam",
    "mayn't": "may not",
    "may've": "may have",
    "methinks": "i think",
    "mightn't": "might not",
    "might've": "might have",
    "mine's": "mine is",
    "mustn't": "must not",
    "mustn't've": "must not have",
    "must've": "must have",
    "'neath": "beneath",
    "needn't": "need not",
    "nal": "and all",
    "ne'er": "never",
    "no one's": "no one is",
    "nothing's": "nothing is",
    "o'clock": "of the clock",
    "o'er": "over",
    "ol'": "old",
    "ought've": "ought have",
    "oughtn't": "ought not",
    "oughtn't've": "ought not have",
    "'round": "around",
    "'s": "is",
    "shalln't": "shall not",
    "shan't": "shall not",
    "she'd": "she would",
    "she'll": "she will",
    "she's": "she is",
    "should've": "should have",
    "shouldn't": "should not",
    "shouldn't've": "should not have",
    "somebody's": "somebody is",
    "someone's": "someone is",
    "something's": "something is",
    "that'll": "that will",
    "that'd": "that would",
    "there'd": "there would",
    "there'll": "there will",
    "there's": "there is",
    "they'd": "they would",
    "they'll": "they will",
    "they're": "they are",
    "they've": "they have",
    "this's": "this is",
    "to've": "to have",
    "wanna": "want to",
    "wasn't": "was not",
    "we'd": "we would",
    "we'll": "we will",
    "we're": "we are",
    "we've": "we have",
    "weren't": "were not",
    "what's": "what is",
    "who's": "who is",
    "won't": "will not",
    "would've": "would have",
    "wouldn't": "would not",
    "y'all": "you all",
    "you'd": "you would",
    "you'll": "you will",
    "you're": "you are",
    "you've": "you have",
}

CONTRACTIONS_PATTERN = re.compile(r"\b(" + "|".join(re.escape(key) for key in CONTRACTIONS_MAP.keys()) + r")\b", re.IGNORECASE)


def expand_contractions(text: str) -> str:
    """
    Expands common English contractions in the input text while preserving capitalization.

    Args:
        text (str): The input text containing contractions.

    Returns:
        str: The text with contractions expanded.
    """

    def replace(match):
        contraction = match.group(0)
        expanded = CONTRACTIONS_MAP[contraction.lower()]
        if contraction[0].isupper():
            return expanded[0].upper() + expanded[1:]
        return expanded

    return CONTRACTIONS_PATTERN.sub(replace, text)
